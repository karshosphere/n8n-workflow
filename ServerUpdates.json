{
  "name": "ServerUpdates",
  "nodes": [
    {
      "parameters": {
        "content": "## News Update",
        "height": 80
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3264,
        -832
      ],
      "typeVersion": 1,
      "id": "e94682a4-5128-4632-93e7-c236540cf25e",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 6
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -3888,
        -576
      ],
      "id": "a120c644-5c64-4d07-8ea6-b9290860b482",
      "name": "Trigger News"
    },
    {
      "parameters": {
        "content": "## Youtube Uploads",
        "height": 80,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3264,
        -112
      ],
      "typeVersion": 1,
      "id": "dae207e7-629d-4100-adee-bbc082acc12f",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "bab96885-2ded-4934-a03c-c3731f624bd2",
              "name": "youtube-channels",
              "value": "[\"UCLklwb0xMIHvvLWJKIrh9lQ\", \"UCaRjpWAd-OYk_n9dO2w5BoQ\", \"UC7YOGHUfC1Tb6E4pudI9STA\", \"UCCJFWxm9fUtB4hPzNvmfcMA\", \"UC2Ivwd5sPzeBPgn24NzM1lQ\", \"UCeeFfhMcJa1kjtfZAGskOCA\", \"UCMiyV_Ib77XLpzHPQH_q0qQ\", \"UC56l7uZA209tlPTVOJiJ8Tw\", \"UCiQo406SKypmtAQXIHdZ6mA\", \"UCNzszbnvQeFzObW0ghk0Ckw\", \"UCHnyfMqiRRG1u-2MsSQLbXA\", \"UCxQKHvKbmSzGMvUrVtJYnUA\", \"UCXuqSBlHAE6Xw-yeJA0Tunw\", \"UCSIvk78tK2TiviLQn4fSHaw\", \"UCw0VJwhVBFDiBZD1gyvZOCA\", \"UCJXa3_WNNmIpewOtCHf3B0g\", \"UCd6vEDS3SOhWbXZrxbrf_bw\", \"UCSJPFQdZwrOutnmSFYtbstA\", \"UC_mneEC0wc29EGGmIsN_xLA\", \"UC9x0AN7BWHpCDHSm9NiJFJQ\", \"UC6biysICWOJ-C3P4Tyeggzg\", \"UCo71RUe6DX4w-Vd47rFLXPg\", \"UCQeRaTukNYft1_6AZPACnog\", \"UCXgNowiGxwwnLeQ7DXTwXPg\", \"UC9-y-6csu5WGm29I7JiwpnA\", \"UCg6gPGh8HU2U01vaFCAsvmQ\", \"UCHASrbCS-niYRn-Y3WX38pA\", \"UCOuGATIAbd2DvzJmUgXn2IQ\", \"UCjSEJkpGbcZhvo0lr-44X_w\", \"UCRBALvAmmqxBX4qiDSpV3PA\"]",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3680,
        -128
      ],
      "id": "7f132d08-a3d3-47cf-a912-560887511279",
      "name": "Subscriptions"
    },
    {
      "parameters": {
        "multipleMethods": true,
        "httpMethod": [
          "GET"
        ],
        "path": "shortcuts",
        "responseMode": "streaming",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -2704,
        -704
      ],
      "id": "42c4c836-7817-4eee-a344-d2ee8a34124b",
      "name": "Apple Shortcuts webhook",
      "webhookId": "f52fab17-7d57-4a7d-806b-4a01c3eaa60a",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "authentication": "webhook",
        "content": "={{ $json.message }}",
        "options": {}
      },
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        -1744,
        -800
      ],
      "id": "ba508d56-85aa-4a86-b5ea-486e8f7c33a4",
      "name": "Day Summary",
      "webhookId": "144ef301-549f-489e-b659-f4a3216930d1",
      "credentials": {
        "discordWebhookApi": {
          "id": "ejmLhJGmpFm9gcSM",
          "name": "Wilson"
        }
      }
    },
    {
      "parameters": {
        "content": "## Morning Summary",
        "height": 80,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2720,
        -832
      ],
      "id": "6c426fbd-4dd0-4b5e-ba3b-0f05a6340e25",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "command": "wget -q -O - \"https://api.open-meteo.com/v1/forecast?latitude=-37.8248&longitude=145.0464&daily=sunrise,sunset,daylight_duration,uv_index_max,wind_speed_10m_max&hourly=temperature_2m,rain,precipitation_probability,apparent_temperature,relative_humidity_2m&timezone=Australia%2FSydney&forecast_days=1\""
      },
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        -2512,
        -704
      ],
      "id": "3c112631-4d53-4842-abbb-b09fedbc811c",
      "name": "Temperature"
    },
    {
      "parameters": {
        "jsCode": "//- Date -------------------------------------------------------------------------------------------\n\nconst today = new Date();\nconst melbourneOffset = today.getTimezoneOffset() * 60000;\nconst melbourneDate = new Date(today.getTime() + melbourneOffset + (11 * 3600000));\nconst options = { weekday: 'short', year: 'numeric', month: 'short', day: '2-digit' };\nconst formattedDate = melbourneDate.toLocaleDateString('en-AU', options).replace(/,/g, '');\n\n\n//- Events and Reminders ---------------------------------------------------------------------------\n\nconst encodedReminders = $('Apple Shortcuts webhook').first().json.headers.reminders;\nconst formattedRemindersString = encodedReminders.split(',')\n        .map(item => decodeURIComponent(item.trim()))\n        .join(',')\n        .slice(1);\n\nconst encodedEvents = $('Apple Shortcuts webhook').first().json.headers.events;\nconst formattedEventsString = encodedEvents.split(',')\n        .map(item => decodeURIComponent(item.trim()))\n        .join(',')\n        .slice(1);\n\n\n//- Weather API ------------------------------------------------------------------------------------\n\nconst inputData = JSON.parse($input.first().json.stdout);\nconst temperatures = inputData.hourly.temperature_2m;\n\nif (temperatures.length === 0) {\n    throw new Error('No temperature data available');\n}\n\nconst lowestTemperature = Math.min(...temperatures);\nconst highestTemperature = Math.max(...temperatures);\n\n// Calculate median temperature\nconst sortedTemperatures = [...temperatures].sort((a, b) => a - b);\nconst mid = Math.floor(sortedTemperatures.length / 2);\nconst medianTemperature = \n    sortedTemperatures.length % 2 !== 0 ? \n    sortedTemperatures[mid] : \n    (sortedTemperatures[mid - 1] + sortedTemperatures[mid]) / 2;\n\nconst apparentTemperature = inputData.hourly.apparent_temperature;\nconst sunriseTime = inputData.daily.sunrise[0];\nconst sunsetTime = inputData.daily.sunset[0];\nconst uvIndex = inputData.daily.uv_index_max[0];\nconst daylightDuration = inputData.daily.daylight_duration[0];\nconst windSpeed = inputData.daily.wind_speed_10m_max[0];\n\n// Format sunrise and sunset times\nconst sunriseFormatted = new Date(sunriseTime * 1000).toLocaleTimeString('en-AU');\nconst sunsetFormatted = new Date(sunsetTime * 1000).toLocaleTimeString('en-AU');\n\n\n//--------------------------------------------------------------------------------------------------\n\nconst prompt = `You are Jarvis like assistant, in similar language but in British English, give me a rundown for my day. Don't call me Stark. It is ${formattedDate} today, in Melbourne, Australia. In brackets, my planned calendar events for today are-${formattedEventsString}. Similarly, my set reminders are-${formattedRemindersString}. Also give me a brief on what kind of climate would be today in continuous conversational tone. Lowest Temp: ${lowestTemperature}C. Highest Temp: ${highestTemperature}C. Median Temp: ${medianTemperature}C. Apparent Temp: ${apparentTemperature[0]}C. Wind Speed: ${windSpeed}kmph. Sunrise Time: ${sunriseFormatted}. Sunset Time: ${sunsetFormatted}. UV Index: ${uvIndex}. Daylight Duration: ${daylightDuration}. Do mention if I should carry umbrella. First word in your response be casual,professional, or dressy based on my calendar feed. Second word should be warm or cold based on temperature reading. Don't offer further support.`;\n\nreturn { json: { prompt } };\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2320,
        -704
      ],
      "id": "ee4c2055-5ee3-44ce-9c41-6261a7da7e95",
      "name": "Generate Prompt"
    },
    {
      "parameters": {
        "method": "=POST",
        "url": "https://api.cerebras.ai/v1/chat/completions",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"qwen-3-235b-a22b-instruct-2507\",\n  \"stream\": true,\n  \"max_tokens\": 20000,\n  \"temperature\": 0.7,\n  \"top_p\": 0.8,\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"{{ $json.prompt }}\"\n    }\n  ]\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2128,
        -704
      ],
      "id": "26684c53-767e-414a-84a3-feefa8d69418",
      "name": "AI Call",
      "credentials": {
        "httpBearerAuth": {
          "id": "flR5nG8H9xJYb4zn",
          "name": "Cerebras Cloud"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Get the response from the previous node\nconst response = items[0].json.data;\n\n// Split the response by new lines to get individual chunks\nconst chunks = response.split('\\n').filter(chunk => chunk.startsWith('data:'));\n\n// Extract the content from each chunk\nconst messages = chunks.map(chunk => {\n    const jsonString = chunk.replace('data: ', '');\n    const jsonData = JSON.parse(jsonString);\n    return jsonData.choices[0].delta.content || '';\n});\n\n// Join the messages to form the complete reply\nlet finalReply = messages.join('');\n\n// Replace all \"\\n\" with \" \\n\"\nfinalReply = finalReply.replace(/\\n/g, ' \\n');\n\n// Split finalReply into words\nconst words = finalReply.trim().split(' ');\n\n// Get the first word as theme and the rest as message\nconst theme = words.shift() || ''; // First word\nconst climate = words.shift() || ''; // Second word\nconst message = words.join(' ').trim();    // Rest of the words\n\n// Return the theme and message\nreturn [{ json: { theme, climate, message } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1936,
        -704
      ],
      "id": "43d78a30-d1fb-4985-a0a4-9e73b840e298",
      "name": "Parse AI call return"
    },
    {
      "parameters": {
        "command": "=python3 ./main.py {{ $json.theme }} {{ $json.climate }}",
        "cwd": "/home/sys23/outfits"
      },
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        -1744,
        -608
      ],
      "id": "c719b451-1587-479a-9b4e-b35ae4158715",
      "name": "run outfit script",
      "credentials": {
        "sshPassword": {
          "id": "Cqvg5uKtAhydbpbW",
          "name": "sys23 user"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "months"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -2704,
        -224
      ],
      "id": "54a1f3e9-7930-47b0-b720-b3114e69ef2e",
      "name": "Remind Reboot"
    },
    {
      "parameters": {
        "content": "## Alerts",
        "height": 80,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2720,
        -368
      ],
      "typeVersion": 1,
      "id": "cbd6389d-a2b1-48d5-98c2-df10dd316190",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "lJg6fYxLyJy8H1f4",
          "mode": "list",
          "cachedResultUrl": "/workflow/lJg6fYxLyJy8H1f4",
          "cachedResultName": "Send Alert"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "alert-type": "Reminder",
            "prompt": "Update & Reboot"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "alert-type",
              "displayName": "alert-type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "prompt",
              "displayName": "prompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "extra-info",
              "displayName": "extra-info",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -2512,
        -224
      ],
      "name": "Send Alert",
      "id": "b8dd4923-d509-4890-92d1-86a734d4a29c"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 18
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -3904,
        -128
      ],
      "id": "84bb994e-cdc7-41fe-8ad0-21a73c450763",
      "name": "Get YouTube Feed"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "yygEYTJLVcpztDRR",
          "mode": "list",
          "cachedResultUrl": "/workflow/yygEYTJLVcpztDRR",
          "cachedResultName": "ScrapeUpdates"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "Subscribe-List": "={{ $json['rss-id'] }}",
            "Channel": "finance"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Subscribe-List",
              "displayName": "Subscribe-List",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "array",
              "removed": false
            },
            {
              "id": "URL-prefix",
              "displayName": "URL-prefix",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "Channel",
              "displayName": "Channel",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.3,
      "position": [
        -3472,
        -512
      ],
      "id": "a7d929b0-1c28-482d-b8b1-8b51108d1bb6",
      "name": "Pull Finance"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "yygEYTJLVcpztDRR",
          "mode": "list",
          "cachedResultUrl": "/workflow/yygEYTJLVcpztDRR",
          "cachedResultName": "ScrapeUpdates"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "Subscribe-List": "={{ $json['rss-id'] }}",
            "Channel": "australia"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Subscribe-List",
              "displayName": "Subscribe-List",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "array",
              "removed": false
            },
            {
              "id": "URL-prefix",
              "displayName": "URL-prefix",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "Channel",
              "displayName": "Channel",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.3,
      "position": [
        -3472,
        -672
      ],
      "id": "7f31081c-b108-4370-8010-cddeee01bb37",
      "name": "Pull Aussie"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "yygEYTJLVcpztDRR",
          "mode": "list",
          "cachedResultUrl": "/workflow/yygEYTJLVcpztDRR",
          "cachedResultName": "ScrapeUpdates"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "Subscribe-List": "={{ $json['rss-id'] }}",
            "Channel": "world"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Subscribe-List",
              "displayName": "Subscribe-List",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "array",
              "removed": false
            },
            {
              "id": "URL-prefix",
              "displayName": "URL-prefix",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "Channel",
              "displayName": "Channel",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.3,
      "position": [
        -3472,
        -832
      ],
      "id": "fa39ea01-8a50-4131-8c1c-347b417f8ad8",
      "name": "Pull World"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "yygEYTJLVcpztDRR",
          "mode": "list",
          "cachedResultUrl": "/workflow/yygEYTJLVcpztDRR",
          "cachedResultName": "ScrapeUpdates"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "Subscribe-List": "={{ $json['rss-id'] }}",
            "Channel": "tech"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Subscribe-List",
              "displayName": "Subscribe-List",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "array",
              "removed": false
            },
            {
              "id": "URL-prefix",
              "displayName": "URL-prefix",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "Channel",
              "displayName": "Channel",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.3,
      "position": [
        -3472,
        -352
      ],
      "id": "e7ac111a-56bc-4945-bd41-17bf0d1fa6ef",
      "name": "Pull Tech"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "bab96885-2ded-4934-a03c-c3731f624bd2",
              "name": "rss-id",
              "value": "[\"https://feeds.content.dowjones.io/public/rss/RSSWSJD\", \"https://feeds.feedburner.com/TheHackersNews\", \"https://www.smh.com.au/rss/technology.xml\", \"https://news.itsfoss.com/rss/\"]",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3680,
        -352
      ],
      "id": "1d0a9694-0755-4f1b-8e70-faa166d2a81f",
      "name": "Tech Sources"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "bab96885-2ded-4934-a03c-c3731f624bd2",
              "name": "rss-id",
              "value": "[\"https://feeds.content.dowjones.io/public/rss/RSSMarketsMain\", \"https://feeds.content.dowjones.io/public/rss/socialeconomyfeed\", \"https://feeds.content.dowjones.io/public/rss/latestnewsrealestate\", \"https://feeds.content.dowjones.io/public/rss/RSSPersonalFinance\", \"https://www.ft.com/rss/home\", \"https://www.nasdaq.com/feed/nasdaq-original/rss.xml\", \"https://fortune.com/feed/fortune-feeds/?id=3230629\", \"https://www.smh.com.au/rss/business.xml\"]",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3680,
        -512
      ],
      "id": "5a5fef29-65e8-48ed-bd4a-3b93a53098d2",
      "name": "Finance Sources"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "bab96885-2ded-4934-a03c-c3731f624bd2",
              "name": "rss-id",
              "value": "[\"https://www.abc.net.au/news/feed/2942460/rss.xml\", \"https://www.sbs.com.au/news/topic/australia/feed\", \"https://www.9news.com.au/rss\", \"https://www.smh.com.au/rss/national.xml\"]",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3680,
        -672
      ],
      "id": "25b66c8e-446a-41b7-b944-9e1d7a110c1f",
      "name": "Aussie Sources"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "bab96885-2ded-4934-a03c-c3731f624bd2",
              "name": "rss-id",
              "value": "[\"https://feeds.bbci.co.uk/news/world/rss.xml\", \"https://moxie.foxnews.com/google-publisher/world.xml\", \"https://feeds.skynews.com/feeds/rss/world.xml\", \"https://feeds.content.dowjones.io/public/rss/RSSWorldNews\", \"https://www.smh.com.au/rss/world.xml\"]",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3680,
        -832
      ],
      "id": "8f600a53-5217-4902-9f56-add8d55b35b6",
      "name": "World Sources"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "yygEYTJLVcpztDRR",
          "mode": "list",
          "cachedResultUrl": "/workflow/yygEYTJLVcpztDRR",
          "cachedResultName": "ScrapeUpdates"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "Subscribe-List": "={{ $json['youtube-channels'] }}",
            "Channel": "youtube",
            "URL-prefix": "https://www.youtube.com/feeds/videos.xml?channel_id="
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Subscribe-List",
              "displayName": "Subscribe-List",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "array",
              "removed": false
            },
            {
              "id": "URL-prefix",
              "displayName": "URL-prefix",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "Channel",
              "displayName": "Channel",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.3,
      "position": [
        -3472,
        -128
      ],
      "id": "4ebe9349-f3c1-4123-ba38-d0130d0ddd40",
      "name": "Pull Tech1"
    }
  ],
  "pinData": {},
  "connections": {
    "Trigger News": {
      "main": [
        [
          {
            "node": "World Sources",
            "type": "main",
            "index": 0
          },
          {
            "node": "Aussie Sources",
            "type": "main",
            "index": 0
          },
          {
            "node": "Finance Sources",
            "type": "main",
            "index": 0
          },
          {
            "node": "Tech Sources",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Subscriptions": {
      "main": [
        [
          {
            "node": "Pull Tech1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Apple Shortcuts webhook": {
      "main": [
        [
          {
            "node": "Temperature",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Temperature": {
      "main": [
        [
          {
            "node": "Generate Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Prompt": {
      "main": [
        [
          {
            "node": "AI Call",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Day Summary": {
      "main": [
        []
      ]
    },
    "AI Call": {
      "main": [
        [
          {
            "node": "Parse AI call return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse AI call return": {
      "main": [
        [
          {
            "node": "Day Summary",
            "type": "main",
            "index": 0
          },
          {
            "node": "run outfit script",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remind Reboot": {
      "main": [
        [
          {
            "node": "Send Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get YouTube Feed": {
      "main": [
        [
          {
            "node": "Subscriptions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tech Sources": {
      "main": [
        [
          {
            "node": "Pull Tech",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Finance Sources": {
      "main": [
        [
          {
            "node": "Pull Finance",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aussie Sources": {
      "main": [
        [
          {
            "node": "Pull Aussie",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "World Sources": {
      "main": [
        [
          {
            "node": "Pull World",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "timezone": "Australia/Sydney",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "versionId": "dfb7ca8e-7a11-48e8-bd29-46a8a5588a49",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "e756d47592edd19f185d238e2e7478669d735875644e429c83c68ea27b73b843"
  },
  "id": "vJMtfqUtKu7gZh8V",
  "tags": []
}